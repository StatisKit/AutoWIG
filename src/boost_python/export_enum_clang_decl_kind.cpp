#include <boost/python.hpp>
#include <clang/AST/DeclBase.h>

void export_enum_clang_decl_kind()
{
    std::string clang_7bbff48d_1098_53e8_8270_b3595c663a99_name = boost::python::extract< std::string >(boost::python::scope().attr("__name__") + ".clang");
    boost::python::object clang_7bbff48d_1098_53e8_8270_b3595c663a99_module(boost::python::handle<  >(boost::python::borrowed(PyImport_AddModule(clang_7bbff48d_1098_53e8_8270_b3595c663a99_name.c_str()))));
    boost::python::scope().attr("clang") = clang_7bbff48d_1098_53e8_8270_b3595c663a99_module;
    boost::python::scope clang_7bbff48d_1098_53e8_8270_b3595c663a99_scope = clang_7bbff48d_1098_53e8_8270_b3595c663a99_module;
    std::string Decl_c14f4539_5334_5999_9f32_44c65bfb6a5a_name = boost::python::extract< std::string >(boost::python::scope().attr("__name__") + "._decl");
    boost::python::object Decl_c14f4539_5334_5999_9f32_44c65bfb6a5a_module(boost::python::handle<  >(boost::python::borrowed(PyImport_AddModule(Decl_c14f4539_5334_5999_9f32_44c65bfb6a5a_name.c_str()))));
    boost::python::scope().attr("_decl") = Decl_c14f4539_5334_5999_9f32_44c65bfb6a5a_module;
    boost::python::scope Decl_c14f4539_5334_5999_9f32_44c65bfb6a5a_scope = Decl_c14f4539_5334_5999_9f32_44c65bfb6a5a_module;
    boost::python::enum_< ::clang::Decl::Kind >("Kind")
        .value("AccessSpec", ::clang::Decl::Kind::AccessSpec)
        .value("Block", ::clang::Decl::Kind::Block)
        .value("Captured", ::clang::Decl::Kind::Captured)
        .value("ClassScopeFunctionSpecialization", ::clang::Decl::Kind::ClassScopeFunctionSpecialization)
        .value("Empty", ::clang::Decl::Kind::Empty)
        .value("ExternCContext", ::clang::Decl::Kind::ExternCContext)
        .value("FileScopeAsm", ::clang::Decl::Kind::FileScopeAsm)
        .value("Friend", ::clang::Decl::Kind::Friend)
        .value("FriendTemplate", ::clang::Decl::Kind::FriendTemplate)
        .value("Import", ::clang::Decl::Kind::Import)
        .value("LinkageSpec", ::clang::Decl::Kind::LinkageSpec)
        .value("Label", ::clang::Decl::Kind::Label)
        .value("Namespace", ::clang::Decl::Kind::Namespace)
        .value("NamespaceAlias", ::clang::Decl::Kind::NamespaceAlias)
        .value("ObjCCompatibleAlias", ::clang::Decl::Kind::ObjCCompatibleAlias)
        .value("ObjCCategory", ::clang::Decl::Kind::ObjCCategory)
        .value("ObjCCategoryImpl", ::clang::Decl::Kind::ObjCCategoryImpl)
        .value("ObjCImplementation", ::clang::Decl::Kind::ObjCImplementation)
        .value("firstObjCImpl", ::clang::Decl::Kind::firstObjCImpl)
        .value("lastObjCImpl", ::clang::Decl::Kind::lastObjCImpl)
        .value("ObjCInterface", ::clang::Decl::Kind::ObjCInterface)
        .value("ObjCProtocol", ::clang::Decl::Kind::ObjCProtocol)
        .value("firstObjCContainer", ::clang::Decl::Kind::firstObjCContainer)
        .value("lastObjCContainer", ::clang::Decl::Kind::lastObjCContainer)
        .value("ObjCMethod", ::clang::Decl::Kind::ObjCMethod)
        .value("ObjCProperty", ::clang::Decl::Kind::ObjCProperty)
        .value("ClassTemplate", ::clang::Decl::Kind::ClassTemplate)
        .value("FunctionTemplate", ::clang::Decl::Kind::FunctionTemplate)
        .value("TypeAliasTemplate", ::clang::Decl::Kind::TypeAliasTemplate)
        .value("VarTemplate", ::clang::Decl::Kind::VarTemplate)
        .value("firstRedeclarableTemplate", ::clang::Decl::Kind::firstRedeclarableTemplate)
        .value("lastRedeclarableTemplate", ::clang::Decl::Kind::lastRedeclarableTemplate)
        .value("TemplateTemplateParm", ::clang::Decl::Kind::TemplateTemplateParm)
        .value("firstTemplate", ::clang::Decl::Kind::firstTemplate)
        .value("lastTemplate", ::clang::Decl::Kind::lastTemplate)
        .value("Enum", ::clang::Decl::Kind::Enum)
        .value("Record", ::clang::Decl::Kind::Record)
        .value("CXXRecord", ::clang::Decl::Kind::CXXRecord)
        .value("ClassTemplateSpecialization", ::clang::Decl::Kind::ClassTemplateSpecialization)
        .value("ClassTemplatePartialSpecialization", ::clang::Decl::Kind::ClassTemplatePartialSpecialization)
        .value("firstClassTemplateSpecialization", ::clang::Decl::Kind::firstClassTemplateSpecialization)
        .value("lastClassTemplateSpecialization", ::clang::Decl::Kind::lastClassTemplateSpecialization)
        .value("firstCXXRecord", ::clang::Decl::Kind::firstCXXRecord)
        .value("lastCXXRecord", ::clang::Decl::Kind::lastCXXRecord)
        .value("firstRecord", ::clang::Decl::Kind::firstRecord)
        .value("lastRecord", ::clang::Decl::Kind::lastRecord)
        .value("firstTag", ::clang::Decl::Kind::firstTag)
        .value("lastTag", ::clang::Decl::Kind::lastTag)
        .value("TemplateTypeParm", ::clang::Decl::Kind::TemplateTypeParm)
        .value("TypeAlias", ::clang::Decl::Kind::TypeAlias)
        .value("Typedef", ::clang::Decl::Kind::Typedef)
        .value("firstTypedefName", ::clang::Decl::Kind::firstTypedefName)
        .value("lastTypedefName", ::clang::Decl::Kind::lastTypedefName)
        .value("UnresolvedUsingTypename", ::clang::Decl::Kind::UnresolvedUsingTypename)
        .value("firstType", ::clang::Decl::Kind::firstType)
        .value("lastType", ::clang::Decl::Kind::lastType)
        .value("Using", ::clang::Decl::Kind::Using)
        .value("UsingDirective", ::clang::Decl::Kind::UsingDirective)
        .value("UsingShadow", ::clang::Decl::Kind::UsingShadow)
        .value("Field", ::clang::Decl::Kind::Field)
        .value("ObjCAtDefsField", ::clang::Decl::Kind::ObjCAtDefsField)
        .value("ObjCIvar", ::clang::Decl::Kind::ObjCIvar)
        .value("firstField", ::clang::Decl::Kind::firstField)
        .value("lastField", ::clang::Decl::Kind::lastField)
        .value("Function", ::clang::Decl::Kind::Function)
        .value("CXXMethod", ::clang::Decl::Kind::CXXMethod)
        .value("CXXConstructor", ::clang::Decl::Kind::CXXConstructor)
        .value("CXXConversion", ::clang::Decl::Kind::CXXConversion)
        .value("CXXDestructor", ::clang::Decl::Kind::CXXDestructor)
        .value("firstCXXMethod", ::clang::Decl::Kind::firstCXXMethod)
        .value("lastCXXMethod", ::clang::Decl::Kind::lastCXXMethod)
        .value("firstFunction", ::clang::Decl::Kind::firstFunction)
        .value("lastFunction", ::clang::Decl::Kind::lastFunction)
        .value("MSProperty", ::clang::Decl::Kind::MSProperty)
        .value("NonTypeTemplateParm", ::clang::Decl::Kind::NonTypeTemplateParm)
        .value("Var", ::clang::Decl::Kind::Var)
        .value("ImplicitParam", ::clang::Decl::Kind::ImplicitParam)
        .value("ParmVar", ::clang::Decl::Kind::ParmVar)
        .value("VarTemplateSpecialization", ::clang::Decl::Kind::VarTemplateSpecialization)
        .value("VarTemplatePartialSpecialization", ::clang::Decl::Kind::VarTemplatePartialSpecialization)
        .value("firstVarTemplateSpecialization", ::clang::Decl::Kind::firstVarTemplateSpecialization)
        .value("lastVarTemplateSpecialization", ::clang::Decl::Kind::lastVarTemplateSpecialization)
        .value("firstVar", ::clang::Decl::Kind::firstVar)
        .value("lastVar", ::clang::Decl::Kind::lastVar)
        .value("firstDeclarator", ::clang::Decl::Kind::firstDeclarator)
        .value("lastDeclarator", ::clang::Decl::Kind::lastDeclarator)
        .value("EnumConstant", ::clang::Decl::Kind::EnumConstant)
        .value("IndirectField", ::clang::Decl::Kind::IndirectField)
        .value("UnresolvedUsingValue", ::clang::Decl::Kind::UnresolvedUsingValue)
        .value("firstValue", ::clang::Decl::Kind::firstValue)
        .value("lastValue", ::clang::Decl::Kind::lastValue)
        .value("firstNamed", ::clang::Decl::Kind::firstNamed)
        .value("lastNamed", ::clang::Decl::Kind::lastNamed)
        .value("OMPThreadPrivate", ::clang::Decl::Kind::OMPThreadPrivate)
        .value("ObjCPropertyImpl", ::clang::Decl::Kind::ObjCPropertyImpl)
        .value("StaticAssert", ::clang::Decl::Kind::StaticAssert)
        .value("TranslationUnit", ::clang::Decl::Kind::TranslationUnit)
        .value("firstDecl", ::clang::Decl::Kind::firstDecl)
        .value("lastDecl", ::clang::Decl::Kind::lastDecl);
}