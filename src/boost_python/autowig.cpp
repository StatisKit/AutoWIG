#include <boost/python.hpp>

void export_enum_clang__exception_specification_type();
void export_enum_clang__cxxdtor_type();
void export_enum_clang__access_specifier();
void export_enum_clang__cxxctor_type();
void export_enum_clang__type_specifier_type();
void export_enum_clang__overloaded_operator_kind();
void export_functions_clang_tooling();
void export_class_clang__qual_type();
void export_class_clang__any_function_decl();
void export_class_clang__template_parm_position();
void export_class_llvm__folding_set_impl__node();
void export_class_clang__decl_context();
void export_class_llvm__pretty_stack_trace_entry();
void export_class_llvm__folding_set_impl();
void export_class_clang__module_loader();
void export_class_clang__decl();
void export_class_clang__global_decl();
void export_class_clang__ext_quals_type_common_base();
void export_class_clang__split_qual_type();
void export_class_clang__ompthread_private_decl();
void export_class_clang__friend_template_decl();
void export_class_clang__file_scope_asm_decl();
void export_class_clang__translation_unit_decl();
void export_class_clang__astunit();
void export_class_clang__named_decl();
void export_class_clang__static_assert_decl();
void export_class_clang__block_decl();
void export_class_clang__empty_decl();
void export_class_clang__access_spec_decl();
void export_class_clang__import_decl();
void export_class_clang__pretty_stack_trace_decl();
void export_class_clang__captured_decl();
void export_class_clang__class_scope_function_specialization_decl();
void export_class_clang__type();
void export_class_clang__obj_cproperty_impl_decl();
void export_class_clang__linkage_spec_decl();
void export_class_clang__friend_decl();
void export_class_clang__extern_ccontext_decl();
void export_class_clang__pack_expansion_type();
void export_class_clang__decltype_type();
void export_class_clang__array_type();
void export_class_clang__member_pointer_type();
void export_class_clang__type_decl();
void export_class_clang__obj_ccontainer_decl();
void export_class_clang__typedef_type();
void export_class_clang__block_pointer_type();
void export_class_clang__type_of_type();
void export_class_clang__using_directive_decl();
void export_class_clang__complex_type();
void export_class_clang__function_type();
void export_class_clang__auto_type();
void export_class_clang__obj_cobject_pointer_type();
void export_class_clang__template_decl();
void export_class_clang__subst_template_type_parm_type();
void export_class_clang__namespace_alias_decl();
void export_class_clang__adjusted_type();
void export_class_clang__namespace_decl();
void export_class_clang__paren_type();
void export_class_clang__pointer_type();
void export_class_clang__obj_cmethod_decl();
void export_class_clang__type_with_keyword();
void export_class_clang__obj_ccompatible_alias_decl();
void export_class_clang__template_specialization_type();
void export_class_clang__using_decl();
void export_class_clang__vector_type();
void export_class_clang__unary_transform_type();
void export_class_clang__builtin_type();
void export_class_clang__reference_type();
void export_class_clang__obj_cobject_type();
void export_class_clang__attributed_type();
void export_class_clang__label_decl();
void export_class_clang__atomic_type();
void export_class_clang__type_of_expr_type();
void export_class_clang__tag_type();
void export_class_clang__using_shadow_decl();
void export_class_clang__template_type_parm_type();
void export_class_clang__obj_cproperty_decl();
void export_class_clang__injected_class_name_type();
void export_class_clang__subst_template_type_parm_pack_type();
void export_class_clang__value_decl();
void export_class_clang__unresolved_using_type();
void export_class_clang__dependent_sized_ext_vector_type();
void export_class_clang__record_type();
void export_class_clang__dependent_type_of_expr_type();
void export_class_clang__constant_array_type();
void export_class_clang__obj_ccategory_decl();
void export_class_clang__declarator_decl();
void export_class_clang__function_proto_type();
void export_class_clang__elaborated_type();
void export_class_clang__obj_cinterface_type();
void export_class_clang__dependent_sized_array_type();
void export_class_clang__rvalue_reference_type();
void export_class_clang__enum_type();
void export_class_clang__obj_cinterface_decl();
void export_class_clang__redeclarable_template_decl();
void export_class_clang__obj_cimpl_decl();
void export_class_clang__ext_vector_type();
void export_class_clang__dependent_template_specialization_type();
void export_class_clang__dependent_name_type();
void export_class_clang__template_type_parm_decl();
void export_class_clang__unresolved_using_typename_decl();
void export_class_clang__typedef_name_decl();
void export_class_clang__function_no_proto_type();
void export_class_clang__template_template_parm_decl();
void export_class_clang__obj_cprotocol_decl();
void export_class_clang__indirect_field_decl();
void export_class_clang__incomplete_array_type();
void export_class_clang__unresolved_using_value_decl();
void export_class_clang__tag_decl();
void export_class_clang__variable_array_type();
void export_class_clang__dependent_decltype_type();
void export_class_clang__enum_constant_decl();
void export_class_clang__decayed_type();
void export_class_clang__lvalue_reference_type();
void export_class_clang__type_alias_decl();
void export_class_clang__type_alias_template_decl();
void export_class_clang__function_decl();
void export_class_clang__var_template_decl();
void export_class_clang__var_decl();
void export_class_clang__field_decl();
void export_class_clang__class_template_decl();
void export_class_clang__record_decl();
void export_class_clang__obj_ccategory_impl_decl();
void export_class_clang__function_template_decl();
void export_class_clang__typedef_decl();
void export_class_clang__msproperty_decl();
void export_class_clang__enum_decl();
void export_class_clang__non_type_template_parm_decl();
void export_class_clang__obj_cimplementation_decl();
void export_class_clang__obj_cat_defs_field_decl();
void export_class_clang__parm_var_decl();
void export_class_clang__implicit_param_decl();
void export_class_clang__cxxrecord_decl();
void export_class_clang__obj_civar_decl();
void export_class_clang__cxxmethod_decl();
void export_class_clang__var_template_specialization_decl();
void export_class_clang__cxxdestructor_decl();
void export_class_clang__var_template_partial_specialization_decl();
void export_class_clang__cxxconstructor_decl();
void export_class_clang__class_template_specialization_decl();
void export_class_clang__cxxconversion_decl();
void export_class_clang__class_template_partial_specialization_decl();

BOOST_PYTHON_MODULE(_autowig)
{
    export_enum_clang__exception_specification_type();
    export_enum_clang__cxxdtor_type();
    export_enum_clang__access_specifier();
    export_enum_clang__cxxctor_type();
    export_enum_clang__type_specifier_type();
    export_enum_clang__overloaded_operator_kind();
    export_functions_clang_tooling();
    export_class_clang__qual_type();
    export_class_clang__any_function_decl();
    export_class_clang__template_parm_position();
    export_class_llvm__folding_set_impl__node();
    export_class_clang__decl_context();
    export_class_llvm__pretty_stack_trace_entry();
    export_class_llvm__folding_set_impl();
    export_class_clang__module_loader();
    export_class_clang__decl();
    export_class_clang__global_decl();
    export_class_clang__ext_quals_type_common_base();
    export_class_clang__split_qual_type();
    export_class_clang__ompthread_private_decl();
    export_class_clang__friend_template_decl();
    export_class_clang__file_scope_asm_decl();
    export_class_clang__translation_unit_decl();
    export_class_clang__astunit();
    export_class_clang__named_decl();
    export_class_clang__static_assert_decl();
    export_class_clang__block_decl();
    export_class_clang__empty_decl();
    export_class_clang__access_spec_decl();
    export_class_clang__import_decl();
    export_class_clang__pretty_stack_trace_decl();
    export_class_clang__captured_decl();
    export_class_clang__class_scope_function_specialization_decl();
    export_class_clang__type();
    export_class_clang__obj_cproperty_impl_decl();
    export_class_clang__linkage_spec_decl();
    export_class_clang__friend_decl();
    export_class_clang__extern_ccontext_decl();
    export_class_clang__pack_expansion_type();
    export_class_clang__decltype_type();
    export_class_clang__array_type();
    export_class_clang__member_pointer_type();
    export_class_clang__type_decl();
    export_class_clang__obj_ccontainer_decl();
    export_class_clang__typedef_type();
    export_class_clang__block_pointer_type();
    export_class_clang__type_of_type();
    export_class_clang__using_directive_decl();
    export_class_clang__complex_type();
    export_class_clang__function_type();
    export_class_clang__auto_type();
    export_class_clang__obj_cobject_pointer_type();
    export_class_clang__template_decl();
    export_class_clang__subst_template_type_parm_type();
    export_class_clang__namespace_alias_decl();
    export_class_clang__adjusted_type();
    export_class_clang__namespace_decl();
    export_class_clang__paren_type();
    export_class_clang__pointer_type();
    export_class_clang__obj_cmethod_decl();
    export_class_clang__type_with_keyword();
    export_class_clang__obj_ccompatible_alias_decl();
    export_class_clang__template_specialization_type();
    export_class_clang__using_decl();
    export_class_clang__vector_type();
    export_class_clang__unary_transform_type();
    export_class_clang__builtin_type();
    export_class_clang__reference_type();
    export_class_clang__obj_cobject_type();
    export_class_clang__attributed_type();
    export_class_clang__label_decl();
    export_class_clang__atomic_type();
    export_class_clang__type_of_expr_type();
    export_class_clang__tag_type();
    export_class_clang__using_shadow_decl();
    export_class_clang__template_type_parm_type();
    export_class_clang__obj_cproperty_decl();
    export_class_clang__injected_class_name_type();
    export_class_clang__subst_template_type_parm_pack_type();
    export_class_clang__value_decl();
    export_class_clang__unresolved_using_type();
    export_class_clang__dependent_sized_ext_vector_type();
    export_class_clang__record_type();
    export_class_clang__dependent_type_of_expr_type();
    export_class_clang__constant_array_type();
    export_class_clang__obj_ccategory_decl();
    export_class_clang__declarator_decl();
    export_class_clang__function_proto_type();
    export_class_clang__elaborated_type();
    export_class_clang__obj_cinterface_type();
    export_class_clang__dependent_sized_array_type();
    export_class_clang__rvalue_reference_type();
    export_class_clang__enum_type();
    export_class_clang__obj_cinterface_decl();
    export_class_clang__redeclarable_template_decl();
    export_class_clang__obj_cimpl_decl();
    export_class_clang__ext_vector_type();
    export_class_clang__dependent_template_specialization_type();
    export_class_clang__dependent_name_type();
    export_class_clang__template_type_parm_decl();
    export_class_clang__unresolved_using_typename_decl();
    export_class_clang__typedef_name_decl();
    export_class_clang__function_no_proto_type();
    export_class_clang__template_template_parm_decl();
    export_class_clang__obj_cprotocol_decl();
    export_class_clang__indirect_field_decl();
    export_class_clang__incomplete_array_type();
    export_class_clang__unresolved_using_value_decl();
    export_class_clang__tag_decl();
    export_class_clang__variable_array_type();
    export_class_clang__dependent_decltype_type();
    export_class_clang__enum_constant_decl();
    export_class_clang__decayed_type();
    export_class_clang__lvalue_reference_type();
    export_class_clang__type_alias_decl();
    export_class_clang__type_alias_template_decl();
    export_class_clang__function_decl();
    export_class_clang__var_template_decl();
    export_class_clang__var_decl();
    export_class_clang__field_decl();
    export_class_clang__class_template_decl();
    export_class_clang__record_decl();
    export_class_clang__obj_ccategory_impl_decl();
    export_class_clang__function_template_decl();
    export_class_clang__typedef_decl();
    export_class_clang__msproperty_decl();
    export_class_clang__enum_decl();
    export_class_clang__non_type_template_parm_decl();
    export_class_clang__obj_cimplementation_decl();
    export_class_clang__obj_cat_defs_field_decl();
    export_class_clang__parm_var_decl();
    export_class_clang__implicit_param_decl();
    export_class_clang__cxxrecord_decl();
    export_class_clang__obj_civar_decl();
    export_class_clang__cxxmethod_decl();
    export_class_clang__var_template_specialization_decl();
    export_class_clang__cxxdestructor_decl();
    export_class_clang__var_template_partial_specialization_decl();
    export_class_clang__cxxconstructor_decl();
    export_class_clang__class_template_specialization_decl();
    export_class_clang__cxxconversion_decl();
    export_class_clang__class_template_partial_specialization_decl();
}