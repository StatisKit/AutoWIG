#include <boost/python.hpp>

void export_enum_clang_decl_kind();
void export_enum_clang_template_argument_arg_kind();
void export_enum_clang_builtin_type_kind();
void export_enum_clang_type_type_class();
void export_enum_clang_linkage_spec_decl_language_ids();
void export_enum_clang_access_specifier();
void export_functions_clang_tooling();
void export_functions_clang_cast();
void export_class_clang_decl();
void export_class_clang_template_argument_list_info();
void export_class_clang_decl_context();
void export_class_clang_qual_type();
void export_class_llvm_pretty_stack_trace_entry();
void export_class_clang_ext_quals_type_common_base();
void export_class_clang_split_qual_type();
void export_class_clang_module_loader();
void export_class_llvm_folding_set_impl_node();
void export_class_clang_any_function_decl();
void export_class_clang_template_argument_list();
void export_class_llvm_folding_set_impl();
void export_class_clang_template_parm_position();
void export_class_clang_cxxbase_specifier();
void export_class_clang_global_decl();
void export_class_clang_template_argument();
void export_class_clang_named_decl();
void export_class_clang_import_decl();
void export_class_clang_file_scope_asm_decl();
void export_class_clang_friend_template_decl();
void export_class_clang_captured_decl();
void export_class_clang_type();
void export_class_clang_empty_decl();
void export_class_clang_access_spec_decl();
void export_class_clang_class_scope_function_specialization_decl();
void export_class_clang_linkage_spec_decl();
void export_class_clang_block_decl();
void export_class_clang_extern_ccontext_decl();
void export_class_clang_friend_decl();
void export_class_clang_astunit();
void export_class_clang_static_assert_decl();
void export_class_clang_obj_cproperty_impl_decl();
void export_class_clang_ompthread_private_decl();
void export_class_clang_pretty_stack_trace_decl();
void export_class_clang_translation_unit_decl();
void export_class_clang_decltype_type();
void export_class_clang_block_pointer_type();
void export_class_clang_array_type();
void export_class_clang_obj_cobject_type();
void export_class_clang_auto_type();
void export_class_clang_template_type_parm_type();
void export_class_clang_obj_cobject_pointer_type();
void export_class_clang_label_decl();
void export_class_clang_unary_transform_type();
void export_class_clang_subst_template_type_parm_pack_type();
void export_class_clang_namespace_decl();
void export_class_clang_reference_type();
void export_class_clang_member_pointer_type();
void export_class_clang_using_directive_decl();
void export_class_clang_pack_expansion_type();
void export_class_clang_obj_ccontainer_decl();
void export_class_clang_paren_type();
void export_class_clang_value_decl();
void export_class_clang_obj_cproperty_decl();
void export_class_clang_unresolved_using_type();
void export_class_clang_using_shadow_decl();
void export_class_clang_using_decl();
void export_class_clang_adjusted_type();
void export_class_clang_obj_ccompatible_alias_decl();
void export_class_clang_obj_cmethod_decl();
void export_class_clang_type_decl();
void export_class_clang_vector_type();
void export_class_clang_function_type();
void export_class_clang_type_of_expr_type();
void export_class_clang_builtin_type();
void export_class_clang_namespace_alias_decl();
void export_class_clang_dependent_sized_ext_vector_type();
void export_class_clang_pointer_type();
void export_class_clang_injected_class_name_type();
void export_class_clang_atomic_type();
void export_class_clang_template_specialization_type();
void export_class_clang_complex_type();
void export_class_clang_tag_type();
void export_class_clang_typedef_type();
void export_class_clang_type_of_type();
void export_class_clang_subst_template_type_parm_type();
void export_class_clang_template_decl();
void export_class_clang_attributed_type();
void export_class_clang_type_with_keyword();
void export_class_clang_elaborated_type();
void export_class_clang_obj_ccategory_decl();
void export_class_clang_redeclarable_template_decl();
void export_class_clang_typedef_name_decl();
void export_class_clang_function_no_proto_type();
void export_class_clang_enum_constant_decl();
void export_class_clang_dependent_template_specialization_type();
void export_class_clang_incomplete_array_type();
void export_class_clang_enum_type();
void export_class_clang_obj_cprotocol_decl();
void export_class_clang_obj_cinterface_type();
void export_class_clang_constant_array_type();
void export_class_clang_obj_cinterface_decl();
void export_class_clang_decayed_type();
void export_class_clang_indirect_field_decl();
void export_class_clang_unresolved_using_value_decl();
void export_class_clang_record_type();
void export_class_clang_ext_vector_type();
void export_class_clang_dependent_type_of_expr_type();
void export_class_clang_rvalue_reference_type();
void export_class_clang_declarator_decl();
void export_class_clang_template_template_parm_decl();
void export_class_clang_tag_decl();
void export_class_clang_function_proto_type();
void export_class_clang_unresolved_using_typename_decl();
void export_class_clang_dependent_sized_array_type();
void export_class_clang_dependent_name_type();
void export_class_clang_dependent_decltype_type();
void export_class_clang_variable_array_type();
void export_class_clang_template_type_parm_decl();
void export_class_clang_lvalue_reference_type();
void export_class_clang_obj_cimpl_decl();
void export_class_clang_type_alias_decl();
void export_class_clang_class_template_decl();
void export_class_clang_function_template_decl();
void export_class_clang_obj_ccategory_impl_decl();
void export_class_clang_msproperty_decl();
void export_class_clang_typedef_decl();
void export_class_clang_function_decl();
void export_class_clang_var_decl();
void export_class_clang_record_decl();
void export_class_clang_non_type_template_parm_decl();
void export_class_clang_type_alias_template_decl();
void export_class_clang_field_decl();
void export_class_clang_obj_cimplementation_decl();
void export_class_clang_var_template_decl();
void export_class_clang_enum_decl();
void export_class_clang_implicit_param_decl();
void export_class_clang_obj_civar_decl();
void export_class_clang_obj_cat_defs_field_decl();
void export_class_clang_cxxrecord_decl();
void export_class_clang_parm_var_decl();
void export_class_clang_var_template_specialization_decl();
void export_class_clang_cxxmethod_decl();
void export_class_clang_cxxconversion_decl();
void export_class_clang_class_template_specialization_decl();
void export_class_clang_cxxdestructor_decl();
void export_class_clang_cxxconstructor_decl();
void export_class_clang_var_template_partial_specialization_decl();
void export_class_clang_class_template_partial_specialization_decl();

BOOST_PYTHON_MODULE(_autowig)
{
    export_enum_clang_decl_kind();
    export_enum_clang_template_argument_arg_kind();
    export_enum_clang_builtin_type_kind();
    export_enum_clang_type_type_class();
    export_enum_clang_linkage_spec_decl_language_ids();
    export_enum_clang_access_specifier();
    export_functions_clang_tooling();
    export_functions_clang_cast();
    export_class_clang_decl();
    export_class_clang_template_argument_list_info();
    export_class_clang_decl_context();
    export_class_clang_qual_type();
    export_class_llvm_pretty_stack_trace_entry();
    export_class_clang_ext_quals_type_common_base();
    export_class_clang_split_qual_type();
    export_class_clang_module_loader();
    export_class_llvm_folding_set_impl_node();
    export_class_clang_any_function_decl();
    export_class_clang_template_argument_list();
    export_class_llvm_folding_set_impl();
    export_class_clang_template_parm_position();
    export_class_clang_cxxbase_specifier();
    export_class_clang_global_decl();
    export_class_clang_template_argument();
    export_class_clang_named_decl();
    export_class_clang_import_decl();
    export_class_clang_file_scope_asm_decl();
    export_class_clang_friend_template_decl();
    export_class_clang_captured_decl();
    export_class_clang_type();
    export_class_clang_empty_decl();
    export_class_clang_access_spec_decl();
    export_class_clang_class_scope_function_specialization_decl();
    export_class_clang_linkage_spec_decl();
    export_class_clang_block_decl();
    export_class_clang_extern_ccontext_decl();
    export_class_clang_friend_decl();
    export_class_clang_astunit();
    export_class_clang_static_assert_decl();
    export_class_clang_obj_cproperty_impl_decl();
    export_class_clang_ompthread_private_decl();
    export_class_clang_pretty_stack_trace_decl();
    export_class_clang_translation_unit_decl();
    export_class_clang_decltype_type();
    export_class_clang_block_pointer_type();
    export_class_clang_array_type();
    export_class_clang_obj_cobject_type();
    export_class_clang_auto_type();
    export_class_clang_template_type_parm_type();
    export_class_clang_obj_cobject_pointer_type();
    export_class_clang_label_decl();
    export_class_clang_unary_transform_type();
    export_class_clang_subst_template_type_parm_pack_type();
    export_class_clang_namespace_decl();
    export_class_clang_reference_type();
    export_class_clang_member_pointer_type();
    export_class_clang_using_directive_decl();
    export_class_clang_pack_expansion_type();
    export_class_clang_obj_ccontainer_decl();
    export_class_clang_paren_type();
    export_class_clang_value_decl();
    export_class_clang_obj_cproperty_decl();
    export_class_clang_unresolved_using_type();
    export_class_clang_using_shadow_decl();
    export_class_clang_using_decl();
    export_class_clang_adjusted_type();
    export_class_clang_obj_ccompatible_alias_decl();
    export_class_clang_obj_cmethod_decl();
    export_class_clang_type_decl();
    export_class_clang_vector_type();
    export_class_clang_function_type();
    export_class_clang_type_of_expr_type();
    export_class_clang_builtin_type();
    export_class_clang_namespace_alias_decl();
    export_class_clang_dependent_sized_ext_vector_type();
    export_class_clang_pointer_type();
    export_class_clang_injected_class_name_type();
    export_class_clang_atomic_type();
    export_class_clang_template_specialization_type();
    export_class_clang_complex_type();
    export_class_clang_tag_type();
    export_class_clang_typedef_type();
    export_class_clang_type_of_type();
    export_class_clang_subst_template_type_parm_type();
    export_class_clang_template_decl();
    export_class_clang_attributed_type();
    export_class_clang_type_with_keyword();
    export_class_clang_elaborated_type();
    export_class_clang_obj_ccategory_decl();
    export_class_clang_redeclarable_template_decl();
    export_class_clang_typedef_name_decl();
    export_class_clang_function_no_proto_type();
    export_class_clang_enum_constant_decl();
    export_class_clang_dependent_template_specialization_type();
    export_class_clang_incomplete_array_type();
    export_class_clang_enum_type();
    export_class_clang_obj_cprotocol_decl();
    export_class_clang_obj_cinterface_type();
    export_class_clang_constant_array_type();
    export_class_clang_obj_cinterface_decl();
    export_class_clang_decayed_type();
    export_class_clang_indirect_field_decl();
    export_class_clang_unresolved_using_value_decl();
    export_class_clang_record_type();
    export_class_clang_ext_vector_type();
    export_class_clang_dependent_type_of_expr_type();
    export_class_clang_rvalue_reference_type();
    export_class_clang_declarator_decl();
    export_class_clang_template_template_parm_decl();
    export_class_clang_tag_decl();
    export_class_clang_function_proto_type();
    export_class_clang_unresolved_using_typename_decl();
    export_class_clang_dependent_sized_array_type();
    export_class_clang_dependent_name_type();
    export_class_clang_dependent_decltype_type();
    export_class_clang_variable_array_type();
    export_class_clang_template_type_parm_decl();
    export_class_clang_lvalue_reference_type();
    export_class_clang_obj_cimpl_decl();
    export_class_clang_type_alias_decl();
    export_class_clang_class_template_decl();
    export_class_clang_function_template_decl();
    export_class_clang_obj_ccategory_impl_decl();
    export_class_clang_msproperty_decl();
    export_class_clang_typedef_decl();
    export_class_clang_function_decl();
    export_class_clang_var_decl();
    export_class_clang_record_decl();
    export_class_clang_non_type_template_parm_decl();
    export_class_clang_type_alias_template_decl();
    export_class_clang_field_decl();
    export_class_clang_obj_cimplementation_decl();
    export_class_clang_var_template_decl();
    export_class_clang_enum_decl();
    export_class_clang_implicit_param_decl();
    export_class_clang_obj_civar_decl();
    export_class_clang_obj_cat_defs_field_decl();
    export_class_clang_cxxrecord_decl();
    export_class_clang_parm_var_decl();
    export_class_clang_var_template_specialization_decl();
    export_class_clang_cxxmethod_decl();
    export_class_clang_cxxconversion_decl();
    export_class_clang_class_template_specialization_decl();
    export_class_clang_cxxdestructor_decl();
    export_class_clang_cxxconstructor_decl();
    export_class_clang_var_template_partial_specialization_decl();
    export_class_clang_class_template_partial_specialization_decl();
}