import os
from distutils import sysconfig
import sys

AddOption('--prefix',
  dest='prefix',
  type='string',
  nargs=1,
  action='store',
  metavar='DIR',
  help='installation prefix',
  default=sys.prefix)

SConsignFile()

variables = Variables()

env = Environment(PREFIX = GetOption('prefix'))
variables.Update(env)

env.AppendUnique(LIBS = ['boost_python', 'python' + sysconfig.get_python_version()])
env.AppendUnique(CPPPATH = [sysconfig.get_python_inc()])
env.AppendUnique(CPPDEFINES = ['BOOST_PYTHON_DYNAMIC_LIB'])

env.Prepend(CPPPATH='$PREFIX/include')
env.Prepend(LIBPATH='$PREFIX/lib')

env.AppendUnique(CXXFLAGS = ['-x', 'c++',
                             '-std=c++0x',
                             '-Wwrite-strings'])

cppenv = env.Clone()

headers = ['overload.h', 'binomial.h']
includes = cppenv.Install(os.path.join(cppenv['PREFIX'], "include", "basic"), headers)
Alias("cpp", includes)
Alias("build", includes)

from autowig.scons import boost_python_builder
boost_python_builder(cppenv)
Alias('wig', cppenv.BoostPython(['_module.py', '_module.cpp'], headers))

sources = ['overload.cpp', 'binomial.cpp']
lib = cppenv.SharedLibrary(os.path.join(cppenv['PREFIX'], "lib", "basic"), sources)
Alias("cpp", lib)
Alias("build", lib)

pyenv = env.Clone()

pyenv.AppendUnique(LIBS = ['basic'])
pyenv.AppendUnique(CXXFLAGS = ['-ftemplate-depth-100'])

wrap = pyenv.LoadableModule('_module', pyenv.Glob('wrapper_*.cpp') + ['_module.cpp'],
                            LDMODULESUFFIX = '.so',
                            FRAMEWORKSFLAGS = '-flat_namespace -undefined suppress')

Alias("py", wrap)
Alias("build", wrap)

Default("wig")
